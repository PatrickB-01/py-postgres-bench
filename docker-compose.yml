
services:
  db:
    build:
      context: ./database  # Build from the current directory (local context)
      dockerfile: Dockerfile  # Specify the Dockerfile (optional if named Dockerfile)
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    networks:
      - mynetwork
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:      
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 30s      
      retries: 5
      start_period: 20s


  app:
    build:
      context: ./src  # Build from the current directory (local context)
      dockerfile: Dockerfile  # Specify the Dockerfile (optional if named Dockerfile)
    container_name: python_app
    restart: no
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_NAME: mydatabase
      TABLE_NAME: mytable
    volumes:
      - ./src:/app
    command: python main.py
    networks:
      - mynetwork

  spammer:
    build:
      context: ./src  # Build from the current directory (local context)
      dockerfile: Dockerfile3  # Specify the Dockerfile (optional if named Dockerfile)
    container_name: spammer
    restart: no
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_NAME: mydatabase
      TABLE_NAME: mytable
    volumes:
    - ./src:/app
    networks:
      - mynetwork

  graphs:
    build:
      context: ./src  # Build from the current directory (local context)
      dockerfile: Dockerfile2  # Specify the Dockerfile (optional if named Dockerfile)
    container_name: graph_generator
    restart: no
    depends_on:
      app:
        condition: service_completed_successfully
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: myuser
      DB_PASSWORD: mypassword
      DB_NAME: mydatabase
    volumes:
      - ./src:/app
    networks:
      - mynetwork

volumes:
  postgres_data:

networks:
  mynetwork:
    driver: bridge
